package org.bitbucket.openisoj2.core.termappiso;

import org.bitbucket.openisoj2.core.HashtableMessage;
import org.bitbucket.openisoj2.core.Iso8583TermApp;
import org.bitbucket.openisoj2.core.formatter.Formatters;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * Created by John on 03/03/14.
 */
public class TermAppIsoPackTests {

    @Test
    public void testPackStructData() throws Exception {
        Iso8583TermApp msg = new Iso8583TermApp();
        msg.setMsgType(Iso8583TermApp.MsgType._1200_TRAN_REQ);
        msg.set(Iso8583TermApp.Bit._011_SYS_TRACE_AUDIT_NUM, "123456");
        HashtableMessage sd = new HashtableMessage();
        sd.put("key", "value");
        msg.putStructuredData(sd);

        String actual = Formatters.getBinary().getString(msg.toMsg());
        String expected = "4231323030002000000001000031323334353630303231F0002100013030313231336B6579313576616C7565";

        assertEquals(expected, actual);
    }

    @Test
    public void testPackIccData()throws Exception {
        Iso8583TermApp msg = new Iso8583TermApp();
        msg.setMsgType(Iso8583TermApp.MsgType._1200_TRAN_REQ);
        msg.set(Iso8583TermApp.Bit._011_SYS_TRACE_AUDIT_NUM, "123456");

        msg.set(Iso8583TermApp.Bit._055_ICC_DATA, "FF208201139F400C3030303030303030303930309F2610354134373043413041434439453733368204354330309F0704464630309F3604303030315F201A56495341204143515549524552205445535420434152442032359F34063145303330309F27023830840E41303030303030303033313031309F060E41303030303030303033313031309F0D0A463034303030383830309F0E0A303031303030303030309F0F0A463034303030393830309F100E30363031304130334130303030305F2804303834305F34009F120F4352454449544F204445205649534199009F33064530423043389F1A04303732349F090A303030303030383030305F2A04303937389A063134303330359C0230309F37083337334144313437");

        String actual = Formatters.getBinary().getString(msg.toMsg());
        String expected

        assertEquals(expected, actual);
    }
}
